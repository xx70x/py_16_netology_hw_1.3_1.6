# Я работаю секретарем и мне постоянно приходят различные документы.
# Я должен быть очень внимателен чтобы не потерять ни один документ.
# Каталог документов хранится в следующем виде:

documents = [
    {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
    {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
    {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
]

# Перечень полок, на которых находятся документы хранится в следующем виде:

directories = {
    '1': ['2207 876234', '11-2'],
    '2': ['10006'],
    '3': []
}


# Задача №1
# Необходимо реализовать пользовательские команды, которые будут выполнять следующие функции:
#
# p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;
# l– list – команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин";
# s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится;
# a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип,
# имя владельца и номер полки, на котором он будет храниться.

# Внимание: p, s, l, a - это пользовательские команды,
# а не названия функций. Функции должны иметь выразительное название, передающие её действие.


# Задача №2
# Почитать про lambda-функции. И что такое *args и **kwargs.

# Задача №3. Дополнительная (не обязательная)
# d – delete – команда, которая спросит номер документа и удалит его из каталога и из перечня полок;
# m – move – команда, которая спросит номер документа и целевую полку и переместит его с текущей полки на целевую;
# as – add shelf – команда, которая спросит номер новой полки и добавит ее в перечень;


def help_commands():
    print('-------------------------------------------')
    print('\n   Используйте такие комманды:')
    print('p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;')
    print('l – list – команда, которая выведет список всех документов в формате '
          'passport "2207 876234" "Василий Гупкин";')

    print('s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится')
    print("a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип, \n "
          "\tимя владельца и номер полки, на котором он будет храниться;")

    # print('d – delete – команда, которая спросит номер документа и удалит его из каталога и из перечня полок;')
    # print("m – move – команда, которая спросит номер документа и целевую полку и "
    #       "переместит его с текущей полки на целевую;")
    #
    # print('as – add shelf – команда, которая спросит номер новой полки и добавит ее в перечень;\n')
    print('\nЧтобы закончить, введите "q" \n ')


def commands():
    return input('Введите команду!: ')


def enter_doc_number():
    return input('Введите номер документа: ')


def enter_add_doc():
    return input('\nВведите тип документа: '), input('Введите номер документа:'), input('Введите имя: '), \
           input('Введите номер полки (1,2,3): ')
# Хотел вернуть несколько значений, но фокус не удался. :-) Не хватило знаний. Пришлось функцию не использовать.
# add_type, add_number, add_name, shelf_number


def people(doc_number):
    """Определяет имя по номеру док-та"""
    for number in documents:
        if number["number"] == doc_number:
            print(number["name"])
            break
    else:
        print(' Нет такого номера.')


def shelf(doc_number):
    """Определяет номер полки нахождения документа"""
    for shelf_num, doc_ls in directories.items():
        if doc_number in set(doc_ls):
            print('\n Полка номер:  {} '.format(shelf_num))
            # return shelf_num


def ls():
    """Выводит список документов"""
    for doc in documents:
        print('{} "{}" "{}"'.format(doc['type'], doc['number'], doc['name'], shelf(doc['number'])))


def add_doc(add_type, add_number, add_name, shelf_number):
    if int(shelf_number) == 1 or 2 or 3:
        documents.append({'type': add_type, 'number': add_number, 'name': add_name})
        directories[shelf_number].append(add_number)
    else:
        print('Нет такой полки. ')


def run():
    while True:
        help_commands()
        cmd = commands()

        if cmd == 'p':
            people(enter_doc_number())
        elif cmd == 'l':
            ls()
        elif cmd == 's':
            shelf(enter_doc_number())
        elif cmd == 'a':
            # add_doc(enter_add_doc())   # Фокус не удался.

            add_doc(input('\nВведите тип документа: '), input("Введите номер документа: "), input('Введите имя: '),
                    input('Введите номер полки (1, 2, 3): '))
        elif cmd == 'q':
            break
        else:
            print('\n Не попали по кнопке. Цельтесь лучше!')

# print(help(ls))
run()
print('До новых встреч!')
